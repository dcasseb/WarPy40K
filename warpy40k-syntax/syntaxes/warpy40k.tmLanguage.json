{
  "name": "WarPy40K",
  "scopeName": "source.warpy40k",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#commands"
    },
    {
      "include": "#types"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#loops"
    },
    {
      "include": "#conditionals"
    },
    {
      "include": "#declarations"
    },
    {
      "include": "#assignments"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.warpy40k",
          "match": "#.*$"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.warpy40k",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.warpy40k",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.integer.warpy40k",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "constant.numeric.float.warpy40k",
          "match": "\\b\\d+\\.\\d+\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.warpy40k",
          "match": "\\b(for|in|while|if|else)\\b"
        }
      ]
    },
    "commands": {
      "patterns": [
        {
          "name": "entity.name.function.warpy40k",
          "match": "\\b(the_emperor_protects|only_in_death_does_duty_end|even_in_death_i_still_serve|no_pity_no_remorse_no_fear|burn_the_heretic|pain_is_temporary_glory_is_forever|faith_is_my_shield|we_are_angels_of_death|we_are_one|WAAAGH|taste_chaos|for_the_emperor|purge_the_xenos|the_emperors_will_be_done|fear_is_the_mind_killer|ave_imperator|the_path_is_set|farseers_vision|more_dakka|ork_cunning|blood_for_the_blood_god|let_the_galaxy_burn|servitor)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.warpy40k",
          "match": "\\b(dg|servitor|blob|psykers|void_shields)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic.warpy40k",
          "match": "\\+"
        },
        {
          "name": "keyword.operator.assignment.warpy40k",
          "match": "="
        },
        {
          "name": "keyword.operator.comparison.warpy40k",
          "match": "(==|!=|<|>|<=|>=)"
        },
        {
          "name": "keyword.operator.range.warpy40k",
          "match": "\\.\\."
        },
        {
          "name": "keyword.operator.declaration.warpy40k",
          "match": ":"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.warpy40k",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "loops": {
      "patterns": [
        {
          "name": "meta.loop.for.warpy40k",
          "begin": "\\b(for)\\b\\s+\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s+\\b(in)\\b",
          "end": ":",
          "beginCaptures": {
            "1": { "name": "keyword.control.warpy40k" },
            "2": { "name": "variable.other.warpy40k" },
            "3": { "name": "keyword.control.warpy40k" }
          },
          "patterns": [
            {
              "include": "#expr_range"
            }
          ]
        },
        {
          "name": "meta.loop.while.warpy40k",
          "begin": "\\b(while)\\b",
          "end": ":",
          "beginCaptures": {
            "1": { "name": "keyword.control.warpy40k" }
          },
          "patterns": [
            {
              "include": "#comparison"
            }
          ]
        }
      ]
    },
    "conditionals": {
      "patterns": [
        {
          "name": "meta.conditional.if.warpy40k",
          "begin": "\\b(if)\\b",
          "end": ":",
          "beginCaptures": {
            "1": { "name": "keyword.control.warpy40k" }
          },
          "patterns": [
            {
              "include": "#comparison"
            }
          ]
        },
        {
          "name": "meta.conditional.else.warpy40k",
          "begin": "\\b(else)\\b",
          "end": ":",
          "beginCaptures": {
            "1": { "name": "keyword.control.warpy40k" }
          }
        }
      ]
    },
    "declarations": {
      "patterns": [
        {
          "name": "meta.declaration.warpy40k",
          "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s*:",
          "end": "\\n",
          "beginCaptures": {
            "1": { "name": "variable.other.warpy40k" }
          },
          "patterns": [
            {
              "include": "#types"
            },
            {
              "include": "#operators"
            },
            {
              "include": "#expressions"
            }
          ]
        }
      ]
    },
    "assignments": {
      "patterns": [
        {
          "name": "meta.assignment.warpy40k",
          "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s*=",
          "end": "\\n",
          "beginCaptures": {
            "1": { "name": "variable.other.warpy40k" }
          },
          "patterns": [
            {
              "include": "#operators"
            },
            {
              "include": "#expressions"
            }
          ]
        }
      ]
    },
    "expr_range": {
      "patterns": [
        {
          "name": "meta.range.warpy40k",
          "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*|\\d+)\\b\\s*\\.\\.",
          "end": "\\b([a-zA-Z_][a-zA-Z0-9_]*|\\d+)\\b",
          "beginCaptures": {
            "1": { "name": "variable.other.warpy40k" }
          },
          "endCaptures": {
            "1": { "name": "variable.other.warpy40k" }
          }
        }
      ]
    },
    "comparison": {
      "patterns": [
        {
          "name": "meta.comparison.warpy40k",
          "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*|\\d+)\\b\\s*(==|!=|<|>|<=|>=)",
          "end": "\\b([a-zA-Z_][a-zA-Z0-9_]*|\\d+)\\b",
          "beginCaptures": {
            "1": { "name": "variable.other.warpy40k" },
            "2": { "name": "keyword.operator.comparison.warpy40k" }
          },
          "endCaptures": {
            "1": { "name": "variable.other.warpy40k" }
          }
        }
      ]
    },
    "expressions": {
      "patterns": [
        {
          "include": "#numbers"
        },
        {
          "include": "#variables"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#commands"
        },
        {
          "include": "#operators"
        }
      ]
    }
  ]
} 